package main

import (
	"fmt"
	"github.com/bytixo/Discord-Malware-Detector/finders"
	"github.com/bytixo/Discord-Malware-Detector/utils"
	"io/ioutil"
	"mvdan.cc/xurls/v2"
	"os"
	"regexp"
	"time"
)

func main() {
	// Compile the regex expression, all credits to sql and toast
	rxStrict := xurls.Strict()
	a := regexp.MustCompile(`(token|appdata|leveldb|Local Storage|ipify|discord_webhook|applicationdata|dhooks|grab|steal|discord|index.js|desktop-core|discordcanary|discordptb|LocalAppData)`)
	// TODO, add more suspicious code to this regex but I need more samples xd
	b := regexp.MustCompile(`(webhook(:?_url)[\ +]?=?|ping_me[\ +]?=?|\{?[\n +]?[\"\']content[\"\'][\ +]?\:?)`)
	c := regexp.MustCompile(`(https?:\/\/(?:ptb\.|canary\.)?discord(app)?\.com\/api(?:\/v[6-9]{1})?\/webhooks\/\d{18}\/[\w\-]{68})`)
	d := regexp.MustCompile(`(Chrome|user data|userdata|brave|Brave Software|User Data|cookies|Opera Stable|Opera)`)
	utils.PrintInfo()
	var f []byte
	file, err := ioutil.ReadFile(os.Args[1])
	if err != nil {
		fmt.Println("Unable to read file")
	}

	for i := 0; i < len(file); i++ { //strip 0 bytes else strings will be unreadable/fucked up
		if file[i] == byte(0) {
			continue
		}
		f = append(f, file[i])
	}

	finders.FindURLS(f, rxStrict)
	finders.FindSuspiciousWords(f, a)
	finders.FindSuspiciousCode(f, b)
	finders.FindSuspiciousRegex(f)
	finders.FindWebhooks(f, c)
	finders.FindBrowserStealer(f, d)
	finders.FindGrabbers(f)
	// Will wait for kill
	time.Sleep(time.Hour)

}
